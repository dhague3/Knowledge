{
  "name": "Discord-Jira Task Management",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "discord-task",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "discord-webhook-trigger",
      "name": "Discord Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Parse Discord message for task creation\nconst discordMessage = $json.content;\nconst author = $json.author;\nconst channelId = $json.channel_id;\n\n// Extract task details using regex patterns\nconst taskMatch = discordMessage.match(/\\/assign @(\\w+) #([A-Z]+-\\d+) \"([^\"]+)\"/i);\nconst statusMatch = discordMessage.match(/\\/status update #([A-Z]+-\\d+) \"([^\"]+)\"/i);\nconst createMatch = discordMessage.match(/\\/create-task \"([^\"]+)\" @(\\w+) (High|Medium|Low)/i);\n\nlet taskType = 'unknown';\nlet taskData = {};\n\n// Determine task type and extract data\nif (taskMatch) {\n  taskType = 'assign';\n  taskData = {\n    assignee: taskMatch[1],\n    ticketId: taskMatch[2],\n    description: taskMatch[3],\n    author: author.username,\n    channelId: channelId\n  };\n} else if (statusMatch) {\n  taskType = 'status_update';\n  taskData = {\n    ticketId: statusMatch[1],\n    statusMessage: statusMatch[2],\n    author: author.username,\n    channelId: channelId\n  };\n} else if (createMatch) {\n  taskType = 'create';\n  taskData = {\n    summary: createMatch[1],\n    assignee: createMatch[2],\n    priority: createMatch[3],\n    author: author.username,\n    channelId: channelId\n  };\n}\n\n// Map Discord channels to Jira projects\nconst channelMapping = {\n  'team-a-jira-development': 'N8N-JIRA',\n  'team-b-cms-research': 'N8N-CMS',\n  'team-c-outreach': 'N8N-OUT',\n  'team-d-analytics': 'N8N-ANA'\n};\n\nconst projectKey = channelMapping[channelId] || 'N8N';\n\nreturn {\n  taskType,\n  taskData,\n  projectKey,\n  originalMessage: discordMessage\n};"
      },
      "id": "parse-discord-message",
      "name": "Parse Discord Command",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"leftValue\": \"={{ $json.taskType }}\",\n              \"rightValue\": \"create\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        }
      },\n      \"id\": \"task-type-switch\",\n      \"name\": \"Route by Task Type\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"typeVersion\": 3,\n      \"position\": [680, 300]\n    },\n    {\n      \"parameters\": {\n        \"authentication\": \"basicAuth\",\n        \"url\": \"https://your-domain.atlassian.net/rest/api/3/issue\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"fields\",\n              \"value\": \"={{ JSON.stringify({\\n  project: { key: $json.projectKey },\\n  summary: $json.taskData.summary,\\n  description: `Created via Discord by ${$json.taskData.author}\\\\n\\\\nChannel: ${$json.taskData.channelId}\\\\n\\\\nOriginal Message: ${$json.originalMessage}`,\\n  issuetype: { name: 'Task' },\\n  priority: { name: $json.taskData.priority },\\n  assignee: { name: $json.taskData.assignee }\\n}) }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"create-jira-ticket\",\n      \"name\": \"Create Jira Ticket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4,\n      \"position\": [900, 200]\n    },\n    {\n      \"parameters\": {\n        \"authentication\": \"basicAuth\",\n        \"url\": \"https://your-domain.atlassian.net/rest/api/3/issue/{{ $json.taskData.ticketId }}\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"fields\",\n              \"value\": \"={{ JSON.stringify({\\n  assignee: { name: $json.taskData.assignee }\\n}) }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"assign-jira-ticket\",\n      \"name\": \"Assign Jira Ticket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4,\n      \"position\": [900, 300]\n    },\n    {\n      \"parameters\": {\n        \"authentication\": \"basicAuth\",\n        \"url\": \"https://your-domain.atlassian.net/rest/api/3/issue/{{ $json.taskData.ticketId }}/comment\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"body\",\n              \"value\": \"={{ JSON.stringify({\\n  type: 'doc',\\n  version: 1,\\n  content: [{\\n    type: 'paragraph',\\n    content: [{\\n      type: 'text',\\n      text: `Status update from Discord by ${$json.taskData.author}: ${$json.taskData.statusMessage}`\\n    }]\\n  }]\\n}) }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"update-jira-status\",\n      \"name\": \"Update Jira Status\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4,\n      \"position\": [900, 400]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"https://discord.com/api/v10/channels/{{ $json.taskData.channelId }}/messages\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"Bot {{ $credentials.discordBot.token }}\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"content\",\n              \"value\": \"✅ **Task Created Successfully!**\\\\n\\\\n📋 **Jira Ticket:** {{ $('create-jira-ticket').first().json.key }}\\\\n📝 **Summary:** {{ $json.taskData.summary }}\\\\n👤 **Assigned to:** @{{ $json.taskData.assignee }}\\\\n🔗 **Link:** https://your-domain.atlassian.net/browse/{{ $('create-jira-ticket').first().json.key }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"discord-success-notification\",\n      \"name\": \"Discord Success Notification\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4,\n      \"position\": [1120, 300]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={{ JSON.stringify({ success: true, message: 'Task processed successfully' }) }}\"\n      },\n      \"id\": \"response-node\",\n      \"name\": \"Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1,\n      \"position\": [1340, 300]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Daily standup automation\\nconst today = new Date().toISOString().split('T')[0];\\nconst teams = ['team-a-jira-development', 'team-b-cms-research', 'team-c-outreach', 'team-d-analytics'];\\n\\nconst standupMessage = `🌅 **Daily Standup - ${today}**\\\\n\\\\n📋 **Please update your progress:**\\\\n\\\\n• What did you complete yesterday?\\\\n• What are you working on today?\\\\n• Any blockers or help needed?\\\\n\\\\n💡 **Use commands:**\\\\n• \\`/status update #TICKET-123 \\\"Your progress update\\\"\\_\\\\n• \\`/help\\` for more commands`;\\n\\nreturn teams.map(team => ({\\n  channelId: team,\\n  message: standupMessage,\\n  type: 'standup'\\n}));\"\n      },\n      \"id\": \"daily-standup-generator\",\n      \"name\": \"Daily Standup Generator\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [240, 600]\n    },\n    {\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"0 9 * * 1-5\"\n            }\n          ]\n        }\n      },\n      \"id\": \"daily-cron-trigger\",\n      \"name\": \"Daily Cron (9 AM Weekdays)\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"typeVersion\": 1,\n      \"position\": [40, 600]\n    }\n  ],\n  \"connections\": {\n    \"discord-webhook-trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"parse-discord-message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"parse-discord-message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"task-type-switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    